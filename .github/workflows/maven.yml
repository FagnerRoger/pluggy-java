# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: Build & Test

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master, development ]
  schedule:
    - cron: "0 0 * * *" # At the end of every day

jobs:
  envs:
    runs-envs: ubuntu-latest
    steps:
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v1

      - name: Login in Doppler
        run: doppler setup --token=${{ secrets.DOPPLER_TOKEN_PROD }} --no-prompt

      - name: Pass All Secrets to Next Steps
        run: doppler secrets download --no-file --format=docker >> $GITHUB_ENV;   
  build:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Maven
        run: mvn -B package --file pom.xml
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Check Test Env Variables
        run: echo PLUGGY_CLIENT_ID $PLUGGY_CLIENT_ID PLUGGY_BASE_URL $PLUGGY_BASE_URL
        env:
          PLUGGY_CLIENT_ID: ${{ env.PLUGGY_CLIENT_ID }}
          PLUGGY_CLIENT_SECRET: ${{ env.PLUGGY_CLIENT_SECRET }}
          PLUGGY_BASE_URL: ${{ env.PLUGGY_BASE_URL }}

        
      - name: Integration Tests
        run: mvn -B verify --file pom.xml
        env:
          PLUGGY_CLIENT_ID: ${{ env.PLUGGY_CLIENT_ID }}
          PLUGGY_CLIENT_SECRET: ${{ env.PLUGGY_CLIENT_SECRET }}
          PLUGGY_BASE_URL: ${{ env.PLUGGY_BASE_URL }}
